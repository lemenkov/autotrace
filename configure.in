# configure.in for frontline
#
# Author: Masatake YAMATO (yamato@redhat.com)
#
AC_INIT(fit.c)

AM_INIT_AUTOMAKE(autotrace, "0.30pre2")
AM_MAINTAINER_MODE

AC_PROG_CC
AC_PROG_CPP
AC_PROG_RANLIB

dnl
dnl ImageMagick
dnl 
HAVE_MAGICK=no
AC_ARG_WITH(magick, 
[  --with-magick  compile with maigck(default)
  --without-magick  compile without maigck],,with_magick=yes)

if test $with_magick = yes ; then
	AC_CHECK_PROG(MAGICK_CONFIG, Magick-config, Magick-config, "")
	if test "x$MAGICK_CONFIG" = "xMagick-config" ; then
		CPPFLAGS_BACKUP="$CPPFLAGS"
		CPPFLAGS=`Magick-config --cppflags`
		AC_CHECK_HEADER(magick/api.h,
				magick_header_found=yes,
				magick_header_found=no)
		MAGICK_CFLAGS=${CPPFLAGS}
		CPPFLAGS=${CPPFLAGS_BACKUP}
		if test "x${magick_header_found}" = xyes ; then
			MAGICK_LDFLAGS="`Magick-config --ldflags` `Magick-config --libs`"
			dnl
			dnl Checking version
			dnl
			AC_MSG_CHECKING([ImageMagick - version >= 5.2.1])
			dnl Get version and split it into MAJOR, MINOR and MICRO
			MAGICK_VERSION=`Magick-config --version`
			changequote(,)dnl
			MAGICK_MAJOR_VERSION=`echo $MAGICK_VERSION \
			| sed -e "s/^\([0-9]*\).[0-9]*.[0-9]*$/\1/"`
			MAGICK_MINOR_VERSION=`echo $MAGICK_VERSION \
			| sed -e 's/^[0-9]*.\([0-9]*\).[0-9]*$/\1/'`
			MAGICK_MICRO_VERSION=`echo $MAGICK_VERSION \
			| sed -e 's/^[0-9]*.[0-9]*.\([0-9]*\)$/\1/'`
			changequote([,])dnl
			MAGICK_MAJOR_VERSION_CHECK=`expr $MAGICK_MAJOR_VERSION \>= 5`
			MAGICK_MINOR_VERSION_CHECK=`expr $MAGICK_MINOR_VERSION \>= 2`
			dnl I don't consider ImageMagick 6.x.
			if test "$MAGICK_VERSION" = "5.2.0" \
			   || test "$MAGICK_MAJOR_VERSION_CHECK" = 0 \
			   || test "$MAGICK_MINOR_VERSION_CHECK" = 0 ; then
			   AC_MSG_RESULT(no($MAGICK_VERSION))
		   	   AC_MSG_WARN([*** Version 5.2.1 or higher is required.             ***])
			   AC_MSG_WARN([*** ImageMagick input handler is disabled.           ***])
			else
 		   		AC_MSG_RESULT(yes($MAGICK_VERSION))
				AC_SUBST(MAGICK_CFLAGS)
				AC_SUBST(MAGICK_LDFLAGS)
				HAVE_MAGICK=yes
				AC_DEFINE(HAVE_MAGICK)
			fi
		else
			AC_MSG_WARN([*** Magick-config is found but magick/api.h is not found in $MAGICK_CFLAGS ***])
 			AC_MSG_WARN([*** Check Magick-config.                                                   ***])
			AC_MSG_WARN([*** ImageMagick input handler is disabled.                                 ***])
		fi
	else
		AC_MSG_WARN([*** Magick-config is not found.                      ***])
		AC_MSG_WARN([*** ImageMagick input handler is disabled.           ***])		
	fi
fi
AM_CONDITIONAL(HAVE_MAGICK, test x$HAVE_MAGICK = xyes)

dnl
dnl LIBPNG
dnl

dnl Test for zlib (from gimp-1.1.29)
HAVE_ZLIB=no
AC_CHECK_LIB(z, gzsetparams,
      	     [AC_CHECK_HEADER(zlib.h,
	                     HAVE_ZLIB=yes,
	                     AC_MSG_WARN(*** ZLIB header files not found: PNG Input will be disabled. ***))],
	     AC_MSG_WARN(*** ZLIB library files not found: PNG Input will be disabled. ***))

dnl Test for libpng
HAVE_LIBPNG_STAGE1=no
AC_CHECK_LIB(png, png_get_image_width,
	HAVE_LIBPNG_STAGE1=yes ,,-lz)

HAVE_LIBPNG=no
if test "x$HAVE_LIBPNG_STAGE1" = "xyes" ; then
	AC_CHECK_LIB(png, png_read_png,
		HAVE_LIBPNG=yes ,,-lz -lm)
	if test "x$HAVE_LIBPNG" = "xyes" ; then
		LIBPNG_LDFLAGS="-lpng -lz -lm"
		AC_SUBST(LIBPNG_LDFLAGS)
		AC_DEFINE(HAVE_LIBPNG)
	else
	   AC_MSG_WARN([*** libpng exists but cannot find png_read_png in the libpng. ***])
	   AC_MSG_WARN([*** libpng might be old.                                      ***])
	   AC_MSG_WARN([*** You need libpng 1.0.6 or higher.                          ***])
	   AC_MSG_WARN([*** Png input handler is disabled.                            ***])
	fi
else
	AC_MSG_WARN([*** Cannot find libpng.            ***])
	AC_MSG_WARN([*** Png input handler is disabled. ***])
fi
AM_CONDITIONAL(HAVE_LIBPNG, test x$HAVE_LIBPNG = xyes)

dnl
dnl LIBMING(LIBSWF)
dnl
HAVE_LIBSWF=no

AC_CHECK_HEADER(ming.h,
	        swf_header_found=yes,
		swf_header_found=no)
if test "${swf_header_found}" = yes ; then
	AC_CHECK_LIB(ming, Ming_init, 
		     HAVE_LIBSWF=yes,,-lm)
	if test "$HAVE_LIBSWF" = "yes" ; then
		LIBSWF_LDFLAGS="-lming -lm"
		AC_SUBST(LIBSWF_LDFLAGS)
		AC_DEFINE(HAVE_LIBSWF)
	else
 		AC_MSG_WARN([*** Cannot find libming.    ***])
		AC_MSG_WARN([*** SWF output is disabled. ***])
	fi
else
	AC_MSG_WARN([*** Cannot find ming.h.     ***])
	AC_MSG_WARN([*** SWF output is disabled. ***])
fi
AM_CONDITIONAL(HAVE_LIBSWF, test x$HAVE_LIBSWF = xyes)

AC_CHECK_HEADERS(malloc.h)

dnl
dnl Vender's cc(not gcc)
dnl
dnl AC_CANONICAL_HOST
dnl if test "x$CC" = xcc ; then
dnl   case host in
dnl 	mips-sgi-irix*)
dnl # Peter Cucka <pcucka at anim.dreamworks.com> wrote:
dnl # > Should I use -Ofast instead of -O2?
dnl # -Ofast selects optimizations that maximize speed, at the expense of
dnl # size, compile time, and, in some cases, floating point accuracy.
dnl # Compiled with -Ofast, AutoTrace runs about twice as fast as with -O2,
dnl # or even -O3, on the two machines (admittedly not a very extensive
dnl # sample) on which I've tested it.  I'd recommend using -Ofast, but
dnl # it's not necessary.
dnl            CFLAGS=-Ofast
dnl            ;;
dnl 	*)
dnl	    ;;
dnl  esac
dnl fi

AC_OUTPUT([Makefile autotrace-config autotrace.pc autotrace.spec], 
[chmod a+x autotrace-config])
